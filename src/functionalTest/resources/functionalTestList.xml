<?xml version="1.0" encoding="utf-8" ?>
<TestsList>
    <Test name="PROTOCOL - Should receive failure" skip="false">
        <TestClassName>functional.test.protocol.ShouldReceiveFailureWhenExceptionTest</TestClassName>
        <WhatTest>Test correct response</WhatTest>
        <HowWorkTest>An agent make a bad request and receive failure</HowWorkTest>
        <WhenTestPass>The test passes if the agent return failure</WhenTestPass>
    </Test>
    <Test name="PROTOCOL - Should receive refuse" skip="false">
        <TestClassName>functional.test.protocol.ShouldReceiveRefuseWhenExceptionTest</TestClassName>
        <WhatTest>Test correct response</WhatTest>
        <HowWorkTest>An agent make a bad request and receive refuse</HowWorkTest>
        <WhenTestPass>The test passes if the agent return refuse</WhenTestPass>
    </Test>
    <Test name="PROTOCOL - Should receive not understood" skip="false">
        <TestClassName>functional.test.protocol.ShouldReceiveNotUnderstoodWhenExceptionTest</TestClassName>
        <WhatTest>Test correct response</WhatTest>
        <HowWorkTest>An agent make a bad request and receive not understood</HowWorkTest>
        <WhenTestPass>The test passes if the agent return not understood</WhenTestPass>
    </Test>
    <Test name="PROTOCOL - Should receive inform" skip="false">
        <TestClassName>functional.test.protocol.ShouldReceiveInformTest</TestClassName>
        <WhatTest>Test correct response</WhatTest>
        <HowWorkTest>An agent make a request and receive inform</HowWorkTest>
        <WhenTestPass>The test passes if the agent return inform</WhenTestPass>
    </Test>
    <Test name="ONTOLOGY - Should receive refuse" skip="false">
        <TestClassName>functional.test.protocol.ontology.ShouldReceiveRefuseWhenSendInvalidActionTest</TestClassName>
        <WhatTest>Test correct response</WhatTest>
        <HowWorkTest>An agent make a request with invalid action and receive refuse</HowWorkTest>
        <WhenTestPass>The test passes if the agent return refuse</WhenTestPass>
    </Test>
    <Test name="ONTOLOGY - Should receive inform" skip="false">
        <TestClassName>functional.test.protocol.ontology.ShouldReceivePredicateWhenValidActionTest</TestClassName>
        <WhatTest>Test correct response</WhatTest>
        <HowWorkTest>An agent make a request with valid action and receive inform</HowWorkTest>
        <WhenTestPass>The test passes if the agent return inform</WhenTestPass>
    </Test>
    <Test name="ONTOLOGY - Should receive failure" skip="false">
        <TestClassName>functional.test.protocol.ontology.ShouldReceiveFailureWhenExceptionTest</TestClassName>
        <WhatTest>Test correct response</WhatTest>
        <HowWorkTest>An agent make a request and tha action fail</HowWorkTest>
        <WhenTestPass>The test passes if the agent return failure</WhenTestPass>
    </Test>
    <Test name="ONTOLOGY - Should receive not understood" skip="false">
        <TestClassName>functional.test.protocol.ontology.ShouldReceiveNotUnderstoodWhenSendInvalidActionTest
        </TestClassName>
        <WhatTest>Test correct response</WhatTest>
        <HowWorkTest>An agent make a request with another ontology</HowWorkTest>
        <WhenTestPass>The test passes if the agent return not understood</WhenTestPass>
    </Test>
    <Test name="SETTINGS - Should receive all settings" skip="false">
        <TestClassName>functional.test.settings.ShouldReceiveAllSettingsTest</TestClassName>
        <WhatTest>Test the correct settings behaviour</WhatTest>
        <HowWorkTest>An agent make a request and receive all settings</HowWorkTest>
        <WhenTestPass>The test passes if the agent return the correct settings</WhenTestPass>
    </Test>
    <Test name="SETTINGS - Should receive a setting" skip="false">
        <TestClassName>functional.test.settings.ShouldReceiveASettingTest</TestClassName>
        <WhatTest>Test the correct settings behaviour</WhatTest>
        <HowWorkTest>An agent make a request and receive the correct setting</HowWorkTest>
        <WhenTestPass>The test passes if the agent return the correct setting</WhenTestPass>
    </Test>
    <Test name="SETTINGS - Should receive failure" skip="false">
        <TestClassName>functional.test.settings.ShouldReceiveFailureWhenSettingNotFoundTest</TestClassName>
        <WhatTest>Test correct response</WhatTest>
        <HowWorkTest>An agent make a bad request and receive failure</HowWorkTest>
        <WhenTestPass>The test passes if the agent return failure</WhenTestPass>
    </Test>
    <Test name="ENVIRONMENT - Should change emotion and behaviour agent" skip="false">
        <TestClassName>functional.test.environment.dummy.ShouldChangeEmotionAndBehaviourTest</TestClassName>
        <WhatTest>Emotional agent behaviour</WhatTest>
        <HowWorkTest>An agent make request to an emotional agent and change his behaviour</HowWorkTest>
        <WhenTestPass>The test passes if the agent change his behaviour</WhenTestPass>
    </Test>
</TestsList>